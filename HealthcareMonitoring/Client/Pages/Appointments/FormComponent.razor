@inject HttpClient _client

<h3>FormComponent</h3>

<EditForm Model="@appointment" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Patient: </label>
        <div>
            <InputSelect @bind-Value="appointment.PatientId" class="form-control">
                <option value="">-- Select Patient --</option>
                @if (Patients != null)
                {
                    foreach (var patient in Patients)
                    {
                        <option value="@patient.Id">@patient.PatientName</option>}
                }
            </InputSelect>
            <ValidationMessage For="@(() => appointment.PatientId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Staff: </label>
        <div>
            <InputSelect @bind-Value="appointment.StaffId" class="form-control">
                <option value="">-- Select Staff --</option>
                @if (Staffs != null)
                {
                    foreach (var staff in Staffs)
                    {
                        <option value="@staff.Id">@staff.StaffName</option>}
                }
            </InputSelect>
            <ValidationMessage For="@(() => appointment.StaffId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Description: </label>
        <div>

            <InputText @bind-Value="@appointment.Description" class="form-control" />
            <ValidationMessage For="@(() => appointment.Description)" />
        </div>
    </div>

    <div class="form-group">
        <label>Description: </label>
        <div>
            <InputDate @bind-Value="@appointment.AppdateTime" class="form-control" />
            <ValidationMessage For="@(() => appointment.AppdateTime)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        @ButtonText
    </button>
</EditForm>

@code {

    [Parameter] public Appointment appointment { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Patient> Patients;
    private IList<Staff> Staffs;


    protected async override Task OnInitializedAsync()
    {
        Patients = await _client.GetFromJsonAsync<List<Patient>>($"{Endpoints.PatientsEndpoint}");
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");

    }


}
