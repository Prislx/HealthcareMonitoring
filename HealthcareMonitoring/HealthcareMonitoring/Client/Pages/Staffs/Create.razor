@page "/staffs/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Staff</h3>
<hr />
<br />



<EditForm Model="@staff" OnValidSubmit="CreateStaff">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Name: </label>
        <div>
            <InputText @bind-Value="@staff.StaffName" class="form-control" />
            <ValidationMessage For="@(() => staff.StaffName)" />
        </div>
    </div>



    <div class="form-group">
        <label>Gender : </label>
        <div>
            <InputText @bind-Value="@staff.Gender" class="form-control" />
            <ValidationMessage For="@(() => staff.Gender)" />
        </div>
    </div>

    <div class="form-group">
        <label>Address: </label>
        <div>
            <InputText @bind-Value="@staff.Address" class="form-control" />
            <ValidationMessage For="@(() => staff.Address)" />
        </div>
    </div>

    <div class="form-group">
        <label>Contact Number: </label>
        <div>
            <InputNumber @bind-Value="@staff.ContactNo" class="form-control" />
            <ValidationMessage For="@(() => staff.ContactNo)" />
        </div>
    </div>

    <div class="form-group">
        <label>Email Address: </label>
        <div>
            <InputText @bind-Value="@staff.Email" class="form-control" />
            <ValidationMessage For="@(() => staff.Email)" />
        </div>
    </div>



    <button type="submit" class="btn btn-success btn-block">
        Create Staff
    </button>
  
</EditForm>

@code { Staff staff = new Staff();

    private async Task CreateStaff()
    {
        await _client.PostAsJsonAsync(Endpoints.StaffsEndpoint, staff);
        _navManager.NavigateTo("/staffs/");
    } }
